roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][j],
longitude = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][j]
)
num_rows<-  nrow(resp)
ID <- c(1:num_rows)
data_frame_resp <- cbind(ID , resp)
df_rbind_flow <- rbind(data_frame_resp,df_rbind_flow)
}
}
######################################################################
url_part_1_flow <- "https://api.tomtom.com/traffic/services/4/flowSegmentData/absolute/8/json?point="
url_part_2_flow <-"&unit=KMPH&openLr=false&key=XB3nUS9mmbqwtAoyyPFh0jDAKf20cMOL"
df_rbind_flow<- data.frame()
for (i in 1:5){#length(df_rbind$long)
print(i)
# Si las coordenadas corresponden al ultimo punto ingresado destino vuelve al punto 1 (hogar)
origen_coords <- paste((df_rbind$lat[i]),(df_rbind$long[i]),sep = ",")
origin_lat  <- strsplit(origen_coords , ",")[[1]][1]
origin_long<- strsplit(origen_coords , ",")[[1]][2]
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
#---  Request en la API
response_flow <- GET(url_flow)
resp_json_flow <- fromJSON(content(response_flow, as = "text"))
for (j in 1:nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])){
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][j],
longitude = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][j]
)
num_rows<-  nrow(resp)
ID <- c(1:num_rows)
data_frame_resp <- cbind(ID , resp)
df_rbind_flow <- rbind(data_frame_resp,df_rbind_flow)
}
}
write.csv(df_rbind_flow,"df_rbind_flow3.csv")
######################################################################
url_part_1_flow <- "https://api.tomtom.com/traffic/services/4/flowSegmentData/absolute/22/json?point="
url_part_2_flow <-"&unit=KMPH&openLr=false&key=XB3nUS9mmbqwtAoyyPFh0jDAKf20cMOL"
df_rbind_flow<- data.frame()
for (i in 1:5){#length(df_rbind$long)
print(i)
# Si las coordenadas corresponden al ultimo punto ingresado destino vuelve al punto 1 (hogar)
origen_coords <- paste((df_rbind$lat[i]),(df_rbind$long[i]),sep = ",")
origin_lat  <- strsplit(origen_coords , ",")[[1]][1]
origin_long<- strsplit(origen_coords , ",")[[1]][2]
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
#---  Request en la API
response_flow <- GET(url_flow)
resp_json_flow <- fromJSON(content(response_flow, as = "text"))
for (j in 1:nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])){
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][j],
longitude = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][j]
)
num_rows<-  nrow(resp)
ID <- c(1:num_rows)
data_frame_resp <- cbind(ID , resp)
df_rbind_flow <- rbind(data_frame_resp,df_rbind_flow)
}
}
source("~/.active-rstudio-document", echo=TRUE)
write.csv(df_rbind_flow,"df_rbind_flow4.csv")
View(resp)
num_row<-nrow(resp_json_flow)
num_row
View(resp_json_flow)
num_row<-nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])
num_row
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][num_row],
longitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][num_row]
latitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1],
longitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][1]
)
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][num_row],
longitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][num_row],
latitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1],
longitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][1]
)
######################################################################
url_part_1_flow <- "https://api.tomtom.com/traffic/services/4/flowSegmentData/absolute/10/json?point="
url_part_2_flow <-"&unit=KMPH&openLr=false&key=XB3nUS9mmbqwtAoyyPFh0jDAKf20cMOL"
url_part_2_flow <-"&unit=KMPH&openLr=false&key=XB3nUS9mmbqwtAoyyPFh0jDAKf20cMOL"
df_rbind_flow<- data.frame()
for (i in 1:5){#length(df_rbind$long)
print(i)
# Si las coordenadas corresponden al ultimo punto ingresado destino vuelve al punto 1 (hogar)
origen_coords <- paste((df_rbind$lat[i]),(df_rbind$long[i]),sep = ",")
origin_lat  <- strsplit(origen_coords , ",")[[1]][1]
origin_long<- strsplit(origen_coords , ",")[[1]][2]
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
#---  Request en la API
response_flow <- GET(url_flow)
resp_json_flow <- fromJSON(content(response_flow, as = "text"))
num_row<-nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][num_row],
longitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][num_row],
latitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1],
longitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][1]
)
df_rbind_flow <- rbind(resp,df_rbind_flow)
}
nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])
######################################################################
url_part_1_flow <- "https://api.tomtom.com/traffic/services/4/flowSegmentData/absolute/10/json?point="
url_part_2_flow <-"&unit=KMPH&openLr=false&key=XB3nUS9mmbqwtAoyyPFh0jDAKf20cMOL"
df_rbind_flow<- data.frame()
for (i in 1:5){#length(df_rbind$long)
print(i)
# Si las coordenadas corresponden al ultimo punto ingresado destino vuelve al punto 1 (hogar)
origen_coords <- paste((df_rbind$lat[i]),(df_rbind$long[i]),sep = ",")
origin_lat  <- strsplit(origen_coords , ",")[[1]][1]
origin_long<- strsplit(origen_coords , ",")[[1]][2]
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
#---  Request en la API
response_flow <- GET(url_flow)
resp_json_flow <- fromJSON(content(response_flow, as = "text"))
num_row<-nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])
for (j in 1:nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]]))
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][num_row],
longitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][num_row],
latitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1],
longitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][1]
)
df_rbind_flow <- rbind(resp,df_rbind_flow)
}
df_rbind_flow <- rbind(df_rbind_flow,resp)
i
i<-1
# Si las coordenadas corresponden al ultimo punto ingresado destino vuelve al punto 1 (hogar)
origen_coords <- paste((df_rbind$lat[i]),(df_rbind$long[i]),sep = ",")
origin_lat  <- strsplit(origen_coords , ",")[[1]][1]
origin_long<- strsplit(origen_coords , ",")[[1]][2]
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
#---  Request en la API
response_flow <- GET(url_flow)
resp_json_flow <- fromJSON(content(response_flow, as = "text"))
num_row<-nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])
num_row
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][num_row],
longitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][num_row],
latitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1],
longitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][1]
)
df_rbind_flow<- data.frame()
df_rbind_flow <- rbind(df_rbind_flow,resp)
i<-2
# Si las coordenadas corresponden al ultimo punto ingresado destino vuelve al punto 1 (hogar)
origen_coords <- paste((df_rbind$lat[i]),(df_rbind$long[i]),sep = ",")
origin_lat  <- strsplit(origen_coords , ",")[[1]][1]
origin_long<- strsplit(origen_coords , ",")[[1]][2]
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
#---  Request en la API
response_flow <- GET(url_flow)
resp_json_flow <- fromJSON(content(response_flow, as = "text"))
num_row<-nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])
num_row
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][num_row],
longitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][num_row],
latitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1],
longitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][1]
)
df_rbind_flow <- rbind(df_rbind_flow,resp)
i<-3
origen_coords
origin_lat
origin_long
url_flow
i<-3
# Si las coordenadas corresponden al ultimo punto ingresado destino vuelve al punto 1 (hogar)
origen_coords <- paste((df_rbind$lat[i]),(df_rbind$long[i]),sep = ",")
origin_lat  <- strsplit(origen_coords , ",")[[1]][1]
origin_long<- strsplit(origen_coords , ",")[[1]][2]
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
origen_coords
rigin_long
origin_long
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
#---  Request en la API
response_flow <- GET(url_flow)
resp_json_flow <- fromJSON(content(response_flow, as = "text"))
num_row<-nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])
resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]]
j
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][num_row],
longitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][num_row],
latitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1],
longitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][1]
)
df_rbind_flow <- rbind(df_rbind_flow,resp)
i
i<-4
# Si las coordenadas corresponden al ultimo punto ingresado destino vuelve al punto 1 (hogar)
origen_coords <- paste((df_rbind$lat[i]),(df_rbind$long[i]),sep = ",")
origin_lat  <- strsplit(origen_coords , ",")[[1]][1]
origin_long<- strsplit(origen_coords , ",")[[1]][2]
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
#---  Request en la API
response_flow <- GET(url_flow)
resp_json_flow2 <- fromJSON(content(response_flow, as = "text"))
View(resp_json_flow2)
resp_json_flow2[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]]
resp_json_flow2[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1]
resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1]
resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][5]
resp_json_flow2[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][5]
resp_json_flow2[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][105]
resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][105]
write.csv(df_rbind_flow,"df_rbind_flow5.csv")
######################################################################
url_part_1_flow <- "https://api.tomtom.com/traffic/services/4/flowSegmentData/absolute/8/json?point="
url_part_2_flow <-"&unit=KMPH&openLr=false&key=XB3nUS9mmbqwtAoyyPFh0jDAKf20cMOL"
url_part_2_flow <-"&unit=KMPH&openLr=false&key=XB3nUS9mmbqwtAoyyPFh0jDAKf20cMOL"
df_rbind_flow<- data.frame()
for (i in 1:2){#length(df_rbind$long)
print(i)
# Si las coordenadas corresponden al ultimo punto ingresado destino vuelve al punto 1 (hogar)
origen_coords <- paste((df_rbind$lat[i]),(df_rbind$long[i]),sep = ",")
origin_lat  <- strsplit(origen_coords , ",")[[1]][1]
origin_long<- strsplit(origen_coords , ",")[[1]][2]
url_flow<- paste0(url_part_1_flow,origin_lat,"%2C",origin_long,url_part_2_flow)
#---  Request en la API
response_flow <- GET(url_flow)
resp_json_flow2 <- fromJSON(content(response_flow, as = "text"))
num_row<-nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]])
for (j in 1:nrow(resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]]))
resp<- data.frame(frc = resp_json_flow[["flowSegmentData"]][["frc"]],
currentSpeed = resp_json_flow[["flowSegmentData"]][["currentSpeed"]],
currentTravelTime = resp_json_flow[["flowSegmentData"]][["currentTravelTime"]],
freeFlowTravelTime = resp_json_flow[["flowSegmentData"]][["freeFlowTravelTime"]],
confidence = resp_json_flow[["flowSegmentData"]][["confidence"]],
roadClosure = resp_json_flow[["flowSegmentData"]][["roadClosure"]],
latitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][num_row],
longitude_final = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][num_row],
latitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["latitude"]][1],
longitude_comienzo = resp_json_flow[["flowSegmentData"]][["coordinates"]][["coordinate"]][["longitude"]][1]
)
df_rbind_flow <- rbind(df_rbind_flow,resp)
}
write.csv(df_rbind_flow,"df_rbind_flow6.csv")
View(recorrido)
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&algorithm=alternative_route&alternative_route.max_paths=4&locale=de&calc_points=false&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph <- GET(url_graph)
View(response_graph)
resp_json_graph <- fromJSON(content(response_graph, as = "text"))
View(resp_json_graph)
resp_json_graph[["hints"]][["visited_nodes.sum"]]
resp_json_graph[["paths"]][["snapped_waypoints"]]
url_graph <- "https://graphhopper.com/api/2/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&algorithm=alternative_route&alternative_route.max_paths=4&locale=de&calc_points=true&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph2 <- fromJSON(content(response_graph2, as = "text"))
response_graph2
View(response_graph2)
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&algorithm=alternative_route&alternative_route.max_paths=4&locale=de&calc_points=true&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph2 <- fromJSON(content(response_graph2, as = "text"))
View(response_graph2)
View(resp_json_graph2)
resp_json_graph2[["paths"]][["instructions"]][[1]][["distance"]]
resp_json_graph2[["paths"]][["instructions"]][[1]][["sign"]]
resp_json_graph2[["paths"]][["details"]]
resp_json_graph2[["paths"]][["snapped_waypoints"]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&algorithm=alternative_route&alternative_route.max_paths=4&points_encoded=false&locale=de&calc_points=true&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph2 <- fromJSON(content(response_graph2, as = "text"))
View(response_graph2)
View(resp_json_graph2)
resp_json_graph2[["paths"]][["snapped_waypoints"]][["coordinates"]][[1]]
resp_json_graph2[["paths"]][["instructions"]][[1]][["time"]]
resp_json_graph2[["paths"]][["bbox"]][[1]]
resp_json_graph2[["paths"]][["points"]][["coordinates"]][[1]]
url_graph <- "https://graphhopper.com/api/2/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&algorithm=alternative_route&alternative_route.max_paths=4&points_encoded=false&locale=de&calc_points=true&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph2 <- fromJSON(content(response_graph2, as = "text"))
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&algorithm=alternative_route&max_paths=4&points_encoded=false&locale=de&calc_points=true&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph2 <- fromJSON(content(response_graph2, as = "text"))
View(response_graph2)
View(resp_json_graph2)
resp_json_graph2[["info"]][["took"]]
resp_json_graph2[["paths"]][["bbox"]][[1]]
resp_json_graph2[["paths"]][["points"]][["coordinates"]][[1]]
response_graph2[["request"]][["options"]]
resp_json_graph2[["paths"]][["instructions"]][[1]][["heading"]]
resp_json_graph2[["paths"]][["legs"]][[1]]
resp_json_graph2[["paths"]][["snapped_waypoints"]][["coordinates"]][[1]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&algorithm=alternative_route&alternative_route.max_paths=3&points_encoded=false&locale=de&calc_points=true&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph2 <- fromJSON(content(response_graph2, as = "text"))
View(response_graph2)
View(resp_json_graph2)
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&algorithm=alternativeRoute&alternative_route.max_paths=3&points_encoded=false&locale=de&calc_points=true&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph2 <- fromJSON(content(response_graph2, as = "text"))
View(response_graph2)
View(resp_json_graph2)
resp_json_graph2[["paths"]][["points"]][["coordinates"]][[1]]
resp_json_graph2[["paths"]][["points"]][["coordinates"]][[1]]
resp_json_graph2[["paths"]][["points"]][["coordinates"]][[2]])
resp_json_graph2[["paths"]][["points"]][["coordinates"]])
resp_json_graph2[["paths"]][["points"]][["coordinates"]]
class(resp_json_graph2[["paths"]][["points"]][["coordinates"]])
(resp_json_graph2[["paths"]][["points"]][["coordinates"]][1])
(resp_json_graph2[["paths"]][["points"]][["coordinates"]][[1]])
a<- data.frame(resp_json_graph2[["paths"]][["points"]][["coordinates"]][[1]])
a
View(a)
write.csv(a,"a.csv")
getwd()
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&algorithm=round_trip&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph2 <- fromJSON(content(response_graph2, as = "text"))
View(response_graph2)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
View(resp_json_graph3)
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
View(resp_json_graph3)
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]]
resp_json_graph3[["paths"]][["instructions"]][[1]][["interval"]][[1]]
resp_json_graph3[["paths"]][["instructions"]][[1]][["interval"]]
resp_json_graph3[["paths"]][["legs"]][[1]]
resp_json_graph3[["paths"]][["details"]]
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]])
nrow(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]])
nrow(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]][1])
nrow(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[,1]])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][1])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][2])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][1])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[[1]]])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[[[1]]])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][1])
length(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]])
data.frame(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]])
c<-data.frame(resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]])
View(c)
length(c)
resp_json_graph3[["paths"]][["snapped_waypoints"]][1][["coordinates"]][[1]]
resp_json_graph3[["paths"]][["snapped_waypoints"]][["coordinates"]][[1]]
resp_json_graph3[["paths"]][["legs"]]
resp_json_graph3[["paths"]][["details"]]
resp_json_graph3[["paths"]][["ascend"]]
resp_json_graph3[["paths"]][["descend"]]
resp_json_graph3[["paths"]][["legs"]][[2]]
resp_json_graph3[["paths"]][["legs"]][[0]]
resp_json_graph3[["paths"]][["legs"]][[1]]
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[0]]
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[2]]
'alternative_route.max_paths': '2',
'alternative_route.max_weight_factor': '1.4',
'alternative_route.max_share_factor': '0.6',
url_graph <- "https://graphhopper.com/maps/?point=36.260134%2C-98.479582&point=36.144667%2C-98.934288&point=35.923393%2C-98.973427&point=35.754692%2C- 98.772191&locale=en-US&vehicle=car&weighting=fastest&elevation=false&turn_costs=false&use_miles=false&layer=Omnisc&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
'alternative_route.max_paths': '2',
'alternative_route.max_weight_factor': '1.4',
'alternative_route.max_share_factor': '0.6',
url_graph <- "https://graphhopper.com/maps/?point=36.260134%2C-98.479582&point=36.144667%2C-98.934288&point=35.923393%2C-98.973427&point=35.754692%2C-98.772191&locale=en-US&vehicle=car&weighting=fastest&elevation=false&turn_costs=false&use_miles=false&layer=Omnisc&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
View(response_graph2)
response_graph2[["status_code"]]
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
'alternative_route.max_paths': '2',
'alternative_route.max_weight_factor': '1.4',
'alternative_route.max_share_factor': '0.6',
url_graph <- "https://graphhopper.com/maps/?point=36.260134,-98.479582&point=36.144667,-98.934288&point=35.923393,-98.973427&point=35.754692,-98.772191&locale=en-US&vehicle=car&weighting=fastest&elevation=false&turn_costs=false&use_miles=false&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
'alternative_route.max_paths': '2',
'alternative_route.max_weight_factor': '1.4',
'alternative_route.max_share_factor': '0.6',
url_graph <- "https://graphhopper.com/maps/?point=36.260134,-98.479582&point=36.144667,-98.934288&locale=en-US&vehicle=car&weighting=fastest&elevation=false&turn_costs=false&use_miles=false&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
url_graph <- "https://graphhopper.com/api/2/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204,-68.789&point=-32.95344,-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
View(response_graph2)
View(resp_json_graph3)
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=false&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
#View(response_graph2)
View(resp_json_graph3)
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=false&optimize=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
#View(response_graph2)
View(resp_json_graph3)
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=false&optimize=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=false&optimize=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
#View(response_graph2)
View(resp_json_graph3)
resp_json_graph3[["paths"]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=false&ch.disable=false&optimize=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
#View(response_graph2)
View(resp_json_graph3)
resp_json_graph3[["paths"]][["points_order"]][[1]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=true&optimize=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
#View(response_graph2)
View(resp_json_graph3)
paths[0].points_encoded
resp_json_graph3.paths[0].points_encoded
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&ch.disable=true&optimize=true&algorithm=alternative_route&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
#View(response_graph2)
View(resp_json_graph3)
resp_json_graph3[["paths"]][["points"]]
decode_df <- decode(resp_json_graph3[["paths"]][["points"]])
decode_df
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=true&optimize=true&algorithm=alternative_route&alternative_route.max_paths=10&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
decode_df <- decode(resp_json_graph3[["paths"]][["points"]])
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
decode_df <- decode(resp_json_graph3[["paths"]][["points"]])
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&point=-32.88204%2C-68.789&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=true&optimize=true&algorithm=alternative_route&alternative_route.max_paths=10&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
#View(response_graph2)
View(resp_json_graph3)
resp_json_graph3[["hints"]][["message"]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=true&optimize=true&algorithm=alternative_route&alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&profile=car&points_encoded=false&locale=de&calc_points=true&ch.disable=true&optimize=true&algorithm.alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]]
url_graph <- "https://graphhopper.com/api/1/route?point=-32.88204%2C-68.789&point=-32.95344%2C-68.824&ch.disable=true&profile=car&points_encoded=false&locale=de&calc_points=true&optimize=true&algorithm.alternative_route.max_paths=3&key=a4b612cb-d94e-438d-bcbc-ab2f493ea06d"
response_graph2 <- GET(url_graph)
resp_json_graph3 <- fromJSON(content(response_graph2, as = "text"))
resp_json_graph3[["paths"]][["points"]][["coordinates"]][[1]]
View(response_graph2)
resp_json_graph3 <- fromJSON(response_graph2, as = "text")
resp_json_graph3 <- fromJSON(response_graph2)
